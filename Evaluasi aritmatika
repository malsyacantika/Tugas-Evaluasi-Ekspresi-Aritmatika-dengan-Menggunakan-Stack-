#include <iostream>
#include <stack>
#include <string>
#include <vector>
#include <cctype>

using namespace std;
int prec (char op) {
if (op == '+' || op == '-') return 1;
if (op == '*' || op == '/'|| op == '%') return 2;
return 0;
}

bool isOp (char ch){
return (ch == '+' || ch == '-' || ch == '*' || ch == '/'|| ch == '%');
}
bool isNum (const string& tok){
if (isdigit(tok[0])){
return true ;
} else if(tok.size() > 1 && tok[0] == '-' && isdigit (tok[1])){
return true;
}
return false;
}

int evaluatePostfix(const vector<string>& tokens){
  stack<int> operands;
  for (const string& token : tokens){
    if (isNum(token)){
      operands.push(stoi(token));
    }else{
      int operand2 = operands.top(); operands.pop();
      int operand1 = operands.top(); operands.top();
      if(token == "+") operands.push(operand1 + operand2);
      else if(token == "-") operands.push(operand1 - operand2);
      else if(token == "*") operands.push(operand1 * operand2);
      else if(token == "/") operands.push(operand1 / operand2);
      else if(token == "%") operands.push(operand1 % operand2);
}
} 
return operands.top();
}


